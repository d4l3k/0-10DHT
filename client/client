#!/usr/bin/env ruby


require 'bundler'
Bundler.require


class Zero10DHT
  def initialize host, port
    @sock = TCPSocket.new(host, port)
  end
  def set key, value
    send({
      cmd: 'SET',
      key: key,
      val: value
    })
  end
  def get key
    send({
      cmd: 'GET',
      key: key
    })
  end
  def nodeadd host, port
    send({
      cmd: 'NODEADD',
      host: host,
      port: port.to_i
    })
  end
  def query cmd, key, val
    send({
      cmd: cmd,
      key: key,
      val: val
    })
  end
  def send obj
    if obj.has_key? :key
      obj[:key] = obj[:key].to_s
    end
    @sock.write(MessagePack.pack(obj))
    @sock.recv(2048)
  end
  def self.connect host: 'localhost', port: ARGV[0] || 8002
    Zero10DHT.new(host, port)
  end
end

$zero10dht = Zero10DHT.connect
$redis = Redis.connect


def bench n
  require 'benchmark'

  Benchmark.bm do |x|
    x.report('set:') do
      for i in 1..n do
        $zero10dht.set(i, 'banana')
      end
    end
  end
end
def bench_redis n
  require 'benchmark'

  Benchmark.bm do |x|
    x.report('redis-set:') do
      for i in 1..n do
        $redis.set(i, 'banana')
      end
    end
  end
end

binding.pry
